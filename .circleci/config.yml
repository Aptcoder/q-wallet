# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
orbs:
    heroku: circleci/heroku@1.2.6

jobs:
    build:
        docker:
            - image: circleci/node:16.13.1
        steps:
            - checkout
            - run:
                  name: Check files
                  command: |
                      ls
            - run:
                  name: Build application
                  command: |
                      npm install
                      npm run build
            - save_cache:
                  paths: [node_modules]
                  key: build
            - persist_to_workspace:
                  root: ~/
                  paths:
                      - project/dist
    test:
        docker:
            - image: circleci/node:16.13.1
              environment:
                  DB_PASSWORD: wonderful.

            - image: circleci/postgres:9.6
              environment:
                  POSTGRES_USER: postgres
                  POSTGRES_DB: q-wallet-test
                  POSTGRES_PASSWORD: wonderful.
        steps:
            - checkout
            - restore_cache:
                  keys: [build]
            - run:
                  name: Run unit tests
                  command: |
                      npm run test:unit
            - run:
                  name: Run integration tests
                  command: |
                      npm run test:integration

    deploy:
        executor: heroku/default
        steps:
            - checkout
            - attach_workspace:
                  at: ~/
            - run:
                  name: Check files
                  command: |
                      ls
            - heroku/install
            - run:
                  command: >
                      echo "The command above installs Heroku, the command below deploys.
                      What you do inbetween is up to you!"
            - heroku/deploy-via-git

workflows:
    test_and_deploy:
        jobs:
            - build
            - test:
                  requires: [build]
            - deploy:
                  requires: [test]
                  filters:
                      branches:
                          only:
                              - main
